"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# 📌 Construcción de rutas dentro del proyecto
BASE_DIR = Path(__file__).resolve().parent.parent

# 📌 Seguridad y configuración del entorno
SECRET_KEY = 'django-insecure-72c5#-)kw&hdkjz1uqk^48_zeazk$@jvj(t8ci5k@!odican_0'
DEBUG = True
ALLOWED_HOSTS = []  # En producción, aquí debes agregar tu dominio

# 📌 Aplicaciones instaladas
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # 📌 Apps necesarias para trabajar con React y APIs
    'rest_framework',  # Django REST Framework
    'rest_framework.authtoken',  # 🔥 Agrega esta línea
    'corsheaders',     # Manejo de CORS (permisos para React)
    'api',             # Aplicación donde estará nuestra API
]

# 📌 Middlewares
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # 📌 Permite peticiones desde React
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# 📌 Configuración de la URL principal del proyecto
ROOT_URLCONF = 'backend.urls'

# 📌 Configuración de plantillas HTML (no necesitaremos muchas ya que usamos React)
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# 📌 Configuración de WSGI para ejecutar Django en servidores
WSGI_APPLICATION = 'backend.wsgi.application'

# 📌 Configuración de la base de datos (usaremos SQLite por ahora)
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# 📌 Validaciones de contraseña
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# 📌 Configuración de idioma y zona horaria
LANGUAGE_CODE = 'es-es'  # Cambiado a español
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# 📌 Configuración de archivos estáticos (CSS, imágenes, JS)
STATIC_URL = 'static/'

# 📌 Configuración de claves primarias automáticas en la base de datos
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# 📌 🔥 Configuración de CORS para permitir el acceso desde React 🔥
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # Permitir peticiones desde el frontend en desarrollo
]

# 📌 🔥 Configuración del modelo de usuario personalizado 🔥
AUTH_USER_MODEL = "api.CustomUser"

# 📌 🔥 Configuración de Django REST Framework 🔥
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.SessionAuthentication",
        "rest_framework.authentication.BasicAuthentication",
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.AllowAny",
    ],
}
